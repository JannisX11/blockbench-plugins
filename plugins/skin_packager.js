/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/display_name.js":
/*!*****************************!*\
  !*** ./src/display_name.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Property(ModelProject, 'string', 'skin_display_name', {\r\n\tcondition: {formats: ['skin', 'minecraft_skin_geometry']},\r\n\tlabel: 'Display Name'\r\n}));\r\n\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/display_name.js?\n}");

/***/ }),

/***/ "./src/generate_pack.js":
/*!******************************!*\
  !*** ./src/generate_pack.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FormValues: () => (/* binding */ FormValues),\n/* harmony export */   SkinData: () => (/* binding */ SkinData)\n/* harmony export */ });\n/* harmony import */ var _util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/uninstall_register */ \"./src/util/uninstall_register.js\");\n\r\n\r\n// https://docs.microsoft.com/en-us/minecraft/creator/documents/packagingaskinpack\r\n\r\nconst BoneTypes = {\r\n\tbody: 'base',\r\n\thead: 'base',\r\n\that: 'clothing',\r\n\thelmet: 'armor',\r\n\trightArm: 'base',\r\n\trightSleeve: 'clothing',\r\n\trightArmArmor: 'armor',\r\n\trightItem: 'item',\r\n\tleftArm: 'base',\r\n\tleftSleeve: 'clothing',\r\n\tleftArmArmor: 'armor',\r\n\tleftItem: 'item',\r\n\tjacket: 'clothing',\r\n\tbodyArmor: 'armor',\r\n\twaist: 'armor_offset',\r\n\trightLeg: 'base',\r\n\trightPants: 'clothing',\r\n\trightLegging: 'armor',\r\n\trightBoot: 'armor',\r\n\tleftLeg: 'base',\r\n\tleftPants: 'clothing',\r\n\tleftLegging: 'armor',\r\n\tleftBoot: 'armor',\r\n}\r\n\r\nconst FormValues = {};\r\nconst SkinData = [];\r\n\r\nfunction isProjectSlim(project) {\r\n\tlet arm_cube = project.elements.find(el => el instanceof Cube && el.name.includes('Right Arm'));\r\n\treturn arm_cube && arm_cube.size(0) < 3.8;\r\n}\r\n\r\n(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__.registerRemovable)(Blockbench.addCSS(`\r\n\t.skin_pack_export_list > div {\r\n\t\tpadding-left: 118px;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.skin_pack_export_list > div > label {\r\n\t\tflex-grow: 1;\r\n\t\twidth: 0;\r\n\t}\r\n\t.skin_pack_export_list > div > label.checkbox {\r\n\t\tflex-grow: 0;\r\n\t\twidth: 34px;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.skin_pack_export_list li {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\t.skin_pack_export_list li.disabled_skin {\r\n\t\topacity: 0.5;\r\n\t}\r\n\t.skin_pack_export_list li > * {\r\n\t\tmargin: 2px;\r\n\t\tobject-fit: contain;\r\n\t}\r\n\t.skin_pack_export_list li input[type=checkbox] {\r\n\t\ttext-align: center;\r\n\t\tmin-width: 30px;\r\n\t}\r\n\t.skin_pack_export_list li input[type=text] {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.skin_pack_export_list .skin_drag_handle {\r\n\t\tflex-grow: 0;\r\n\t\tcursor: move;\r\n\t\tpadding-top: 6px;\r\n\t}\r\n\t.skin_pack_export_list li img {\r\n\t\ttransition: transform 100ms ease;\r\n\t\ttransform-origin: left;\r\n\t}\r\n\t.skin_pack_export_list li:not(.disabled_skin) img:hover {\r\n\t\ttransform: scale(4);\r\n\t\tbackground-color: var(--color-back);\r\n\t\tborder: 0.25px solid var(--color-accent);\r\n\t}\r\n`));\r\n\r\nfunction cleanTextureName(name) {\r\n\treturn name.replace(/\\.png$/i, '')\r\n}\r\n\r\nfunction selectSkinsForExport() {\r\n\tlet uuids = [];\r\n\tModelProject.all.forEach(project => {\r\n\t\tif (project.format.id !== 'minecraft_skin_geometry' && project.format.id !== 'skin') return;\r\n\t\tif (!project.textures[0]) return;\r\n\r\n\t\tif (project.format.id === 'minecraft_skin_geometry') {\r\n\t\t\tlet data = SkinData.find(s => s.uuid == project.uuid);\r\n\t\t\tif (!data) {\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tuuid: project.uuid,\r\n\t\t\t\t\texport: true,\r\n\t\t\t\t\tslim: project.minecraft_skin_slim,\r\n\t\t\t\t\tfree: false\r\n\t\t\t\t};\r\n\t\t\t\tSkinData.push(data)\r\n\t\t\t}\r\n\t\t\tdata.thumbnail = project.thumbnail || project.textures[0].source;\r\n\t\t\tdata.name = project.skin_display_name;\r\n\t\t\tdata.id = project.geometry_name;\r\n\t\t\tuuids.push(project.uuid);\r\n\r\n\t\t} else {\r\n\t\t\tlet multi = project.textures.length > 1;\r\n\t\t\tproject.textures.forEach((texture, i) => {\r\n\t\t\t\tlet uuid = project.uuid + '-' + texture.uuid;\r\n\t\t\t\tlet data = SkinData.find(s => s.uuid == uuid);\r\n\t\t\t\tif (!data) {\r\n\t\t\t\t\tdata = {\r\n\t\t\t\t\t\tuuid: uuid,\r\n\t\t\t\t\t\texport: true,\r\n\t\t\t\t\t\tslim: isProjectSlim(project),\r\n\t\t\t\t\t\tfree: false,\r\n\t\t\t\t\t\tname: multi ? cleanTextureName(texture.name) : project.skin_display_name,\r\n\t\t\t\t\t\tid: multi ? cleanTextureName(texture.name).replace(/\\s+/g, '') : project.geometry_name,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tSkinData.push(data);\r\n\t\t\t\t}\r\n\t\t\t\tdata.texture = texture;\r\n\t\t\t\tdata.thumbnail = texture.source;\r\n\t\t\t\tif (!multi) data.name = project.skin_display_name;\r\n\t\t\t\tif (!multi) data.id = project.geometry_name;\r\n\t\t\t\tuuids.push(data.uuid);\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\tSkinData.forEachReverse((skin) => {\r\n\t\tif (!uuids.includes(skin.uuid)) {\r\n\t\t\tSkinData.remove(skin);\r\n\t\t}\r\n\t})\r\n\r\n\tlet dialog = new Dialog({\r\n\t\tid: 'skin_pack_export',\r\n\t\ttitle: 'Export Skin Pack',\r\n\t\twidth: 700,\r\n\t\tform: {\r\n\t\t\tname: {label: 'Pack Name', type: 'text', value: FormValues.name},\r\n\t\t\tid: {label: 'Pack Identifier', type: 'text', value: FormValues.id},\r\n\t\t\tversion: {label: 'Version', type: 'text', value: FormValues.uuid || '1.0.0'},\r\n\t\t\tuuid: {label: 'UUID', type: 'text', value: FormValues.uuid || guid()},\r\n\t\t\tregenerate_uuid: {label: ' ', nocolon: true, type: 'buttons', buttons: ['Regenerate UUID'], click(index) {\r\n\t\t\t\tdialog.setFormValues({uuid: guid()});\r\n\t\t\t}},\r\n\t\t\ttype: {type: 'select', label: 'Pack Type', options: {\r\n\t\t\t\tauger: 'Ready-to-Submit',\r\n\t\t\t\tmcpack: 'MCPack',\r\n\t\t\t}},\r\n\t\t\tseparator1: '_',\r\n\r\n\t\t\tkey_art: {type: 'file', label: 'Key Art', value: FormValues.key_art, extensions: ['jpg'], filetype: 'Image', condition: form => form.type == 'auger'},\r\n\t\t\tpartner_art: {type: 'file', label: 'Partner Art', value: FormValues.partner_art, extensions: ['jpg'], filetype: 'Image', condition: form => form.type == 'auger'},\r\n\t\t\thd_key_art: {type: 'file', label: 'HD Key Art', value: FormValues.hd_key_art, extensions: ['jpg'], filetype: 'Image', condition: form => form.type == 'auger'},\r\n\r\n\t\t\tseparator2: '_'\r\n\t\t},\r\n\t\tcomponent: {\r\n\t\t\tdata() {return {\r\n\t\t\t\tskins: SkinData\r\n\t\t\t}},\r\n\t\t\tmethods: {\r\n\t\t\t\tchangeMeta(skin, uuid, key, event) {\r\n\t\t\t\t\tlet project = ModelProject.all.find(p => p.uuid == uuid || (p.textures.length == 1 && uuid == p.uuid + '-' + p.textures[0].uuid));\r\n\t\t\t\t\tif (project) {\r\n\t\t\t\t\t\tif (key == 'id') {\r\n\t\t\t\t\t\t\tproject.geometry_name = skin.id;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tproject.skin_display_name = skin.name;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tproject.saved = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsort(event) {\r\n\t\t\t\t\tvar item = this.skins.splice(event.oldIndex, 1)[0];\r\n\t\t\t\t\tthis.skins.splice(event.newIndex, 0, item);\r\n\t\t\t\t},\r\n\t\t\t\tdrop(event) {},\r\n\t\t\t},\r\n\t\t\ttemplate: `\r\n\t\t\t\t<div class=\"skin_pack_export_list\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<label>ID</label>\r\n\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t<label class=\"checkbox\">Slim</label>\r\n\t\t\t\t\t\t<label class=\"checkbox\">Free</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul v-sortable=\"{onUpdate: sort, onEnd: drop, animation: 160, handle: '.skin_drag_handle'}\">\r\n\t\t\t\t\t\t<li v-for=\"skin in skins\" :key=\"skin.uuid\" :class=\"{disabled_skin: !skin.export}\">\r\n\t\t\t\t\t\t\t<div class=\"skin_drag_handle\"><i class=\"material-icons\">drag_handle</i></div>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"skin.export\" :style=\"{color: skin.export ? 'var(--color-accent)' : 'unset'}\">\r\n\t\t\t\t\t\t\t<img :src=\"skin.thumbnail\" width=\"48px\" height=\"48px\" />\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"dark_bordered\" v-model=\"skin.id\" @input=\"changeMeta(skin, skin.uuid, 'id', $event)\">\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"dark_bordered\" v-model=\"skin.name\" @input=\"changeMeta(skin, skin.uuid, 'name', $event)\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"skin.slim\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"skin.free\">\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t`\r\n\t\t},\r\n\t\tonConfirm(formResult) {\r\n\t\t\tFormValues.id = formResult.id;\r\n\t\t\tFormValues.name = formResult.name;\r\n\t\t\tFormValues.uuid = formResult.uuid;\r\n\t\t\tFormValues.version = formResult.version;\r\n\t\t\tFormValues.type = formResult.type;\r\n\t\t\tFormValues.key_art = formResult.key_art;\r\n\t\t\tFormValues.partner_art = formResult.partner_art;\r\n\t\t\tFormValues.hd_key_art = formResult.hd_key_art;\r\n\t\t\tgeneratePack(formResult)\r\n\t\t}\r\n\t}).show();\r\n}\r\n\r\n\r\n\r\nasync function generatePack(options) {\r\n\tlet archive = new JSZip();\r\n\tlet skin_folder;\r\n\tif (options.type == 'mcpack') {\r\n\t\tskin_folder = archive;\r\n\t} else {\r\n\t\tskin_folder = archive.folder('Content/skin_pack')\r\n\t}\r\n\r\n\tlet skin_config = {\r\n\t\tid: options.id,\r\n\t\tname: options.name,\r\n\t\tuuid: options.uuid,\r\n\t\tversion: options.version,\r\n\t\ttype: options.type,\r\n\t\tkey_art: options.key_art,\r\n\t\tpartner_art: options.partner_art,\r\n\t\thd_key_art: options.hd_key_art,\r\n\t\tskins: {}\r\n\t};\r\n\tlet geometries = {};\r\n\tlet skins = [];\r\n\tlet translations = [\r\n\t\t`skinpack.${options.id}=${options.name}`\r\n\t];\r\n\r\n\tfor (let skin of SkinData) {\r\n\t\tlet uuid = skin.uuid;\r\n\t\tif (!skin.export) continue;\r\n\t\tlet project = ModelProject.all.find(p => uuid.substring(0, p.uuid.length) == p.uuid);\r\n\t\tif (!project) continue;\r\n\r\n\t\tlet geometry_name = (project.format.id == 'minecraft_skin_geometry') && `geometry.${options.id}.${skin.id}`;\r\n\r\n\t\t// Meta\r\n\t\tlet meta = {\r\n\t\t\tlocalization_name: skin.id,\r\n\t\t\tgeometry: geometry_name || `geometry.humanoid.${skin.slim ? 'customSlim' : 'custom'}`,\r\n\t\t\ttexture: `${skin.id}.png`,\r\n\t\t\ttype: skin.free ? 'free' : 'paid',\r\n\t\t};\r\n\t\tskins.push(meta);\r\n\r\n\t\t// Text\r\n\t\ttranslations.push(`skin.${options.id}.${skin.id}=${skin.name}`);\r\n\r\n\t\t// Image\r\n\t\tlet texture = skin.texture || project.selected_texture || project.textures[0];\r\n\t\tskin_folder.file(`${skin.id}.png`, texture.getBase64(), {base64: true});\r\n\r\n\t\t// Geo\r\n\t\tif (geometry_name) {\r\n\t\t\tproject.select();\r\n\t\t\tif (Modes.animate) {\r\n\t\t\t\tModes.options.edit.select();\r\n\t\t\t}\r\n\t\t\tlet model = Codecs.bedrock_old.compile({raw: true});\r\n\t\t\tlet {bones} = model;\r\n\t\t\t\r\n\t\t\tdelete model.visible_bounds_width;\r\n\t\t\tdelete model.visible_bounds_height;\r\n\t\t\tdelete model.visible_bounds_offset;\r\n\t\t\tdelete model.bones;\r\n\r\n\t\t\tmodel.META_ModelVersion = '1.0.6';\r\n\t\t\tmodel.rigtype = skin.slim ? 'slim' : 'normal';\r\n\t\t\tif (project.skin_geo_flag_armsdown) model.animationArmsDown = true;\r\n\t\t\tif (project.skin_geo_flag_armsoutfront) model.animationArmsOutFront = true;\r\n\t\t\tif (project.skin_geo_flag_statueoflibertyarms) model.animationStatueOfLibertyArms = true;\r\n\t\t\tif (project.skin_geo_flag_singlearmanimation) model.animationSingleArmAnimation = true;\r\n\t\t\tif (project.skin_geo_flag_stationarylegs) model.animationStationaryLegs = true;\r\n\t\t\tif (project.skin_geo_flag_singleleganimation) model.animationSingleLegAnimation = true;\r\n\t\t\tif (project.skin_geo_flag_noheadbob) model.animationNoHeadBob = true;\r\n\t\t\tif (project.skin_geo_flag_dontshowarmor) model.animationDontShowArmor = true;\r\n\t\t\tif (project.skin_geo_flag_upsidedown) model.animationUpsideDown = true;\r\n\t\t\tif (project.skin_geo_flag_invertedcrouch) model.animationInvertedCrouch = true;\r\n\t\t\tmodel.bones = bones;\r\n\r\n\t\t\tbones.forEach(bone => {\r\n\t\t\t\tif (BoneTypes[bone.name]) {\r\n\t\t\t\t\tbone.META_BoneType = BoneTypes[bone.name];\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tgeometries[geometry_name] = model;\r\n\t\t}\r\n\r\n\t\t\r\n\t\t// Config\r\n\t\tskin_config.skins[skin.id] = {\r\n\t\t\texport: skin.export,\r\n\t\t\tslim: skin.slim,\r\n\t\t\tfree: skin.free,\r\n\t\t\tmodel_file: geometry_name ? Project.save_path : undefined,\r\n\t\t\ttexture_file: texture.path || texture.source.replace(/\\?.*$/, ''),\r\n\t\t}\r\n\t}\r\n\r\n\tlet version = options.version ? options.version.split('.') : [1, 0, 0];\r\n\tlet manifest = {\r\n\t\tformat_version: 1,\r\n\t\theader: {\r\n\t\t\tname: \"pack.name\",\r\n\t\t\tversion,\r\n\t\t\tuuid: options.uuid || guid()\r\n\t\t},\r\n\t\tmodules: [\r\n\t\t\t{\r\n\t\t\t\tversion,\r\n\t\t\t\ttype: \"skin_pack\",\r\n\t\t\t\tuuid: guid()\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\tlet languages = [\"en_US\"];\r\n\tlet skins_file = {\r\n\t\tserialize_name: options.id,\r\n\t\tlocalization_name: options.id,\r\n\t\tskins\r\n\t}\r\n\r\n\tif (Object.keys(geometries).length) skin_folder.file('geometry.json', compileJSON(geometries));\r\n\tskin_folder.file('skins.json', compileJSON(skins_file));\r\n\tskin_folder.file('manifest.json', compileJSON(manifest));\r\n\tskin_folder.file('texts/en_US.lang', translations.join('\\n'));\r\n\tskin_folder.file('texts/languages.json', compileJSON(languages));\r\n\r\n\r\n\tif (options.type == 'mcpack') {\r\n\t\tlet blob = await archive.generateAsync({type: 'blob'});\r\n\t\tBlockbench.export({\r\n\t\t\ttype: 'MCPack',\r\n\t\t\textensions: ['mcpack'],\r\n\t\t\tname: options.id,\r\n\t\t\tcontent: blob,\r\n\t\t\tsavetype: 'zip'\r\n\t\t})\r\n\r\n\t} else {\r\n\t\tconsole.log(options)\r\n\t\tasync function writeImage(source, target) {\r\n\t\t\tif (source && isApp) {\r\n\t\t\t\tlet fs = requireNativeModule(\"fs\");\r\n\t\t\t\tlet base64 = fs.readFileSync(source, 'base64');\r\n\t\t\t\tarchive.file(target, base64, {base64: true});\r\n\t\t\t}\r\n\t\t}\r\n\t\tawait writeImage(options.key_art, `Store Art/${options.id}_Thumbnail_0.jpg`)\r\n\t\tawait writeImage(options.partner_art, `Marketing Art/${options.id}_PartnerArt.jpg`)\r\n\t\tawait writeImage(options.hd_key_art, `Marketing Art/${options.id}_MarketingKeyArt.jpg`)\r\n\r\n\t\tlet blob = await archive.generateAsync({type: 'blob'});\r\n\t\tBlockbench.export({\r\n\t\t\ttype: 'ZIP Folder',\r\n\t\t\textensions: ['zip'],\r\n\t\t\tname: options.id,\r\n\t\t\tcontent: blob,\r\n\t\t\tsavetype: 'zip'\r\n\t\t})\r\n\t}\r\n\r\n\tBlockbench.export({\r\n\t\ttype: 'Skin Pack Config',\r\n\t\textensions: ['bbskinpack'],\r\n\t\tname: options.id,\r\n\t\tcontent: '',\r\n\t\tcustom_writer(content, path) {\r\n\r\n\t\t\tlet export_skin_config = JSON.parse(JSON.stringify(skin_config));\r\n\r\n\t\t\tif (skin_config.key_art) export_skin_config.key_art = PathModule.relative(PathModule.dirname(path), skin_config.key_art).replace(/[\\\\/]+/g, '/');\r\n\t\t\tif (skin_config.partner_art) export_skin_config.partner_art = PathModule.relative(PathModule.dirname(path), skin_config.partner_art).replace(/[\\\\/]+/g, '/');\r\n\t\t\tif (skin_config.hd_key_art) export_skin_config.hd_key_art = PathModule.relative(PathModule.dirname(path), skin_config.hd_key_art).replace(/[\\\\/]+/g, '/');\r\n\r\n\t\t\tfor (let id in export_skin_config.skins) {\r\n\t\t\t\tlet skin = export_skin_config.skins[id];\r\n\t\t\t\tif (isApp && skin.model_file) {\r\n\t\t\t\t\tskin.model_file = PathModule.relative(PathModule.dirname(path), skin.model_file).replace(/[\\\\/]+/g, '/');\r\n\t\t\t\t}\r\n\t\t\t\tif (isApp && skin.texture_file) {\r\n\t\t\t\t\tskin.texture_file = PathModule.relative(PathModule.dirname(path), skin.texture_file).replace(/[\\\\/]+/g, '/');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tBlockbench.writeFile(path, {\r\n\t\t\t\tcontent: compileJSON(export_skin_config),\r\n\t\t\t\tsavetype: 'text'\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n}\r\n\r\nif (!BarItems.export_minecraft_skin_pack) {\r\n\tlet export_action = new Action('export_minecraft_skin_pack', {\r\n\t\tname: 'Export Skin Pack',\r\n\t\ticon: 'folder_shared',\r\n\t\tclick() {\r\n\t\t\tselectSkinsForExport();\r\n\t\t}\r\n\t})\r\n\tMenuBar.addAction(export_action, 'file.export');\r\n\t(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__.registerRemovable)(export_action);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/generate_pack.js?\n}");

/***/ }),

/***/ "./src/load_skin_pack_config.js":
/*!**************************************!*\
  !*** ./src/load_skin_pack_config.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importImageFileAsSkin: () => (/* binding */ importImageFileAsSkin)\n/* harmony export */ });\n/* harmony import */ var _util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/uninstall_register */ \"./src/util/uninstall_register.js\");\n/* harmony import */ var _generate_pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generate_pack */ \"./src/generate_pack.js\");\n/* harmony import */ var _skin_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./skin_presets */ \"./src/skin_presets.js\");\n\r\n\r\n\r\n\r\nfunction importImageFileAsSkin(file, is_alex) {\r\n\tlet parts = file.name.replace(/\\.png$/i, '').split(/[-_.]/);\r\n\tlet alex_hints = ['s', 'a', 'f', 'slim', 'alex', 'female'];\r\n\tif (is_alex == undefined) {\r\n\t\tis_alex = alex_hints.includes(parts[0]) || alex_hints.includes(parts.last());\r\n\t}\r\n\r\n\tnewProject(Formats.skin);\r\n\tlet preset = is_alex ? _skin_presets__WEBPACK_IMPORTED_MODULE_2__.PresetAlex : _skin_presets__WEBPACK_IMPORTED_MODULE_2__.PresetSteve;\r\n\tlet model = JSON.parse(preset.model || (preset.model_bedrock));\r\n\tCodecs.skin_model.parse(model, 16, null, true, true);\r\n\r\n\tProject.name = parts\r\n\t\t.filter((part, i) => !alex_hints.includes(part) || (i && i !== parts.length-1) || part.toLowerCase() == 'female')\r\n\t\t.map(part => part.substring(0, 1).toUpperCase() + part.substring(1))\r\n\t\t.join(' ');\r\n\tProject.geometry_name = file.name.replace(/\\.png$/i, '');\r\n\t\r\n\tTexture.all[0].remove(true);\r\n\tnew Texture({name: file.name}).fromFile(file).add(false);\r\n\r\n\tOutliner.elements.forEach(element => {\r\n\t\tif (element.visibility === false) element.visibility = true;\r\n\t})\r\n\tCanvas.updateVisibility()\r\n}\r\n\r\nfunction loadSkinPackConfig(file) {\r\n\tlet content = autoParseJSON(file.content);\r\n\tlet dirname = PathModule.dirname(file.path);\r\n\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.id = content.id;\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.name = content.name;\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.uuid = content.uuid;\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.version = content.version;\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.type = content.type;\r\n\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.key_art = content.key_art ? PathModule.join(dirname, content.key_art) : '';\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.partner_art = content.partner_art ? PathModule.join(dirname, content.partner_art) : '';\r\n\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.FormValues.hd_key_art = content.hd_key_art ? PathModule.join(dirname, content.hd_key_art) : '';\r\n\r\n\tfor (let id in content.skins) {\r\n\t\tlet skin = content.skins[id];\r\n\t\tlet skin_data = {\r\n\t\t\texport: skin.export,\r\n\t\t\tslim: skin.slim,\r\n\t\t\tfree: skin.free,\r\n\t\t};\r\n\t\tif (skin.model_file) {\r\n\t\t\tlet model_file = PathModule.join(dirname, skin.model_file);\r\n\t\t\tlet fs = requireNativeModule(\"fs\", {scope: dirname});\r\n\t\t\tlet model_file_content = autoParseJSON(fs.readFileSync(model_file, 'utf-8'));\r\n\t\t\tCodecs.project.load(model_file_content, {path: model_file});\r\n\t\t\tskin_data.uuid = Project.uuid;\r\n\t\t\tskin_data.thumbnail = Project.thumbnail || Project.textures[0].source;\r\n\t\t\tskin_data.name = Project.skin_display_name;\r\n\t\t\tskin_data.id = Project.geometry_name;\r\n\r\n\t\t} else if (skin.texture_file) {\r\n\t\t\tlet texture_file = PathModule.join(dirname, skin.texture_file);\r\n\t\t\tBlockbench.read(texture_file, {readtype: 'image'}, (files) => {\r\n\t\t\t\timportImageFileAsSkin(files[0], skin.slim);\r\n\t\t\t\tskin_data.uuid = Project.uuid + '-' + Texture.all[0].uuid;\r\n\t\t\t\tskin_data.thumbnail = Project.thumbnail || Project.textures[0].source;\r\n\t\t\t\tskin_data.name = Project.skin_display_name;\r\n\t\t\t\tskin_data.id = Project.geometry_name;\r\n\t\t\t})\r\n\t\t}\r\n\t\t_generate_pack__WEBPACK_IMPORTED_MODULE_1__.SkinData.push(skin_data);\r\n\t}\r\n}\r\n\r\nif (!BarItems.load_minecraft_skin_pack_config) {\r\n\tlet export_action = new Action('load_minecraft_skin_pack_config', {\r\n\t\tname: 'Load Skin Pack Config',\r\n\t\ticon: 'recent_actors',\r\n\t\tclick() {\r\n\t\t\tBlockbench.import({\r\n\t\t\t\textensions: ['bbskinpack'],\r\n\t\t\t\ttype: 'Skin Pack Config',\r\n\r\n\t\t\t}, files => {\r\n\t\t\t\tloadSkinPackConfig(files[0]);\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\tMenuBar.addAction(export_action, 'file.5');\r\n\t(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__.registerRemovable)(export_action);\r\n\t\r\n\tBlockbench.addDragHandler(\r\n\t\t'bbskinpack',\r\n\t\t{extensions: ['bbskinpack']},\r\n\t\tfunction(files) {\r\n\t\t\tloadSkinPackConfig(files[0]);\r\n\t\t}\r\n\t)\r\n\t;(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_0__.registerRemovable)({\r\n\t\tdelete() {\r\n\t\t\tBlockbench.removeDragHandler('bbskinpack')\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/load_skin_pack_config.js?\n}");

/***/ }),

/***/ "./src/skin_packager.js":
/*!******************************!*\
  !*** ./src/skin_packager.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _load_skin_pack_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load_skin_pack_config */ \"./src/load_skin_pack_config.js\");\n/* harmony import */ var _generate_pack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generate_pack */ \"./src/generate_pack.js\");\n/* harmony import */ var _display_name__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./display_name */ \"./src/display_name.js\");\n/* harmony import */ var _util_uninstall_register__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/uninstall_register */ \"./src/util/uninstall_register.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nBBPlugin.register('skin_packager', {\r\n\ttitle: 'Minecraft Skin Pack Packager',\r\n\tauthor: 'JannisX11',\r\n\ticon: 'icon-player',\r\n\tdescription: 'Create Skin Packs for the Minecraft Marketplace',\r\n\ttags: ['Minecraft: Bedrock Edition', 'Minecraft Marketplace'],\r\n\tabout: 'Generates skin packs for the Minecraft Marketplace.\\nAll textures in all open tabs count as skins. You can load individual skins into Blockbench via **File** > **Import Minecraft Skins**.\\n'+\r\n\t\t`You can also create new skins via **New** > **Minecraft Skin**, in the File menu or on the start screen.\\n`+\r\n\t\t`Export a skin pack via **File** > **Export** > **Export Skin Pack**.`,\r\n\tversion: \"0.3.1\",\r\n\tmin_version: '3.7.0',\r\n\tvariant: 'desktop',\r\n\tawait_loading: true,\r\n\tonload() {\r\n\r\n\t\tlet import_action = new Action('import_minecraft_skins', {\r\n\t\t\ticon: 'folder',\r\n\t\t\tname: 'Import Minecraft Skins',\r\n\t\t\tdescription: 'Import a batch of Minecraft skins',\r\n\t\t\tclick() {\r\n\t\t\t\tBlockbench.import({\r\n\t\t\t\t\tresource_id: 'texture',\r\n\t\t\t\t\textensions: ['png'],\r\n\t\t\t\t\ttype: 'Minecraft Skin',\r\n\t\t\t\t\treadtype: 'image',\r\n\t\t\t\t\tmultiple: true,\r\n\t\t\t\t}, files => {\r\n\t\t\t\t\tfiles.forEach(file => {\r\n\t\t\t\t\t\t(0,_load_skin_pack_config__WEBPACK_IMPORTED_MODULE_0__.importImageFileAsSkin)(file);\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t\tMenuBar.menus.file.addAction(import_action, 5)\r\n\t\t;(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_3__.registerRemovable)(import_action);\r\n\r\n\t\t(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_3__.registerRemovable)(_display_name__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n\r\n\t},\r\n\tonunload() {\r\n\t\t(0,_util_uninstall_register__WEBPACK_IMPORTED_MODULE_3__.deleteRemovables)();\r\n\t}\r\n})\r\n\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/skin_packager.js?\n}");

/***/ }),

/***/ "./src/skin_presets.js":
/*!*****************************!*\
  !*** ./src/skin_presets.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PresetAlex: () => (/* binding */ PresetAlex),\n/* harmony export */   PresetSteve: () => (/* binding */ PresetSteve)\n/* harmony export */ });\nconst PresetSteve = {\r\n\tdisplay_name: 'Player - Wide',\r\n\tpose: true,\r\n\tmodel: `{\r\n\t\t\"name\": \"steve\",\r\n\t\t\"texturewidth\": 64,\r\n\t\t\"textureheight\": 64,\r\n\t\t\"eyes\": [\r\n\t\t\t[9, 11],\r\n\t\t\t[13, 11]\r\n\t\t],\r\n\t\t\"bones\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Waist\",\r\n\t\t\t\t\"color\": 0,\r\n\t\t\t\t\"pivot\": [0, 12, 0],\r\n\t\t\t\t\"pose\": [0, 0, 0]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Head\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 1,\r\n\t\t\t\t\"pivot\": [0, 24, 0],\r\n\t\t\t\t\"pose\": [-6, 5, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Head\", \"origin\": [-4, 24, -4], \"size\": [8, 8, 8], \"uv\": [0, 0]},\r\n\t\t\t\t\t{\"name\": \"Hat Layer\", \"visibility\": false, \"origin\": [-4, 24, -4], \"size\": [8, 8, 8], \"uv\": [32, 0], \"inflate\": 0.5, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Body\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 3,\r\n\t\t\t\t\"pivot\": [0, 24, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Body\", \"origin\": [-4, 12, -2], \"size\": [8, 12, 4], \"uv\": [16, 16]},\r\n\t\t\t\t\t{\"name\": \"Body Layer\", \"visibility\": false, \"origin\": [-4, 12, -2], \"size\": [8, 12, 4], \"uv\": [16, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Right Arm\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 5,\r\n\t\t\t\t\"pivot\": [-5, 22, 0],\r\n\t\t\t\t\"pose\": [-10, 0, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Right Arm\", \"origin\": [-8, 12, -2], \"size\": [4, 12, 4], \"uv\": [40, 16]},\r\n\t\t\t\t\t{\"name\": \"Right Arm Layer\", \"visibility\": false, \"origin\": [-8, 12, -2], \"size\": [4, 12, 4], \"uv\": [40, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Left Arm\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 0,\r\n\t\t\t\t\"pivot\": [5, 22, 0],\r\n\t\t\t\t\"pose\": [12, 0, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Left Arm\", \"origin\": [4, 12, -2], \"size\": [4, 12, 4], \"uv\": [32, 48]},\r\n\t\t\t\t\t{\"name\": \"Left Arm Layer\", \"visibility\": false, \"origin\": [4, 12, -2], \"size\": [4, 12, 4], \"uv\": [48, 48], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Right Leg\",\r\n\t\t\t\t\"color\": 6,\r\n\t\t\t\t\"pivot\": [-1.9, 12, 0],\r\n\t\t\t\t\"pose\": [11, 0, 2],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Right Leg\", \"origin\": [-3.9, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 16]},\r\n\t\t\t\t\t{\"name\": \"Right Leg Layer\", \"visibility\": false, \"origin\": [-3.9, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Left Leg\",\r\n\t\t\t\t\"color\": 7,\r\n\t\t\t\t\"pivot\": [1.9, 12, 0],\r\n\t\t\t\t\"pose\": [-10, 0, -2],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Left Leg\", \"origin\": [-0.1, 0, -2], \"size\": [4, 12, 4], \"uv\": [16, 48]},\r\n\t\t\t\t\t{\"name\": \"Left Leg Layer\", \"visibility\": false, \"origin\": [-0.1, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 48], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}`\r\n};\r\nconst PresetAlex = {\r\n\tdisplay_name: 'Player - Slim',\r\n\tpose: true,\r\n\tmodel: `{\r\n\t\t\"name\": \"alex\",\r\n\t\t\"texturewidth\": 64,\r\n\t\t\"textureheight\": 64,\r\n\t\t\"eyes\": [\r\n\t\t\t[9, 11],\r\n\t\t\t[13, 11]\r\n\t\t],\r\n\t\t\"bones\": [\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Waist\",\r\n\t\t\t\t\"color\": 0,\r\n\t\t\t\t\"pivot\": [0, 12, 0],\r\n\t\t\t\t\"pose\": [0, 0, 0]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Head\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 1,\r\n\t\t\t\t\"pivot\": [0, 24, 0],\r\n\t\t\t\t\"pose\": [-6, 5, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Head\", \"origin\": [-4, 24, -4], \"size\": [8, 8, 8], \"uv\": [0, 0]},\r\n\t\t\t\t\t{\"name\": \"Hat Layer\", \"visibility\": false, \"origin\": [-4, 24, -4], \"size\": [8, 8, 8], \"uv\": [32, 0], \"inflate\": 0.5, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Body\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 3,\r\n\t\t\t\t\"pivot\": [0, 24, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Body\", \"origin\": [-4, 12, -2], \"size\": [8, 12, 4], \"uv\": [16, 16]},\r\n\t\t\t\t\t{\"name\": \"Body Layer\", \"visibility\": false, \"origin\": [-4, 12, -2], \"size\": [8, 12, 4], \"uv\": [16, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Right Arm\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 5,\r\n\t\t\t\t\"pivot\": [-5, 21.5, 0],\r\n\t\t\t\t\"pose\": [-10, 0, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Right Arm\", \"origin\": [-7, 11.5, -2], \"size\": [3, 12, 4], \"uv\": [40, 16]},\r\n\t\t\t\t\t{\"name\": \"Right Arm Layer\", \"visibility\": false, \"origin\": [-7, 11.5, -2], \"size\": [3, 12, 4], \"uv\": [40, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Left Arm\",\r\n\t\t\t\t\"parent\": \"Waist\",\r\n\t\t\t\t\"color\": 0,\r\n\t\t\t\t\"pivot\": [5, 21.5, 0],\r\n\t\t\t\t\"pose\": [12, 0, 0],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Left Arm\", \"origin\": [4, 11.5, -2], \"size\": [3, 12, 4], \"uv\": [32, 48]},\r\n\t\t\t\t\t{\"name\": \"Left Arm Layer\", \"visibility\": false, \"origin\": [4, 11.5, -2], \"size\": [3, 12, 4], \"uv\": [48, 48], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Right Leg\",\r\n\t\t\t\t\"color\": 6,\r\n\t\t\t\t\"pivot\": [-1.9, 12, 0],\r\n\t\t\t\t\"pose\": [11, 0, 2],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Right Leg\", \"origin\": [-3.9, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 16]},\r\n\t\t\t\t\t{\"name\": \"Right Leg Layer\", \"visibility\": false, \"origin\": [-3.9, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 32], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"name\": \"Left Leg\",\r\n\t\t\t\t\"color\": 7,\r\n\t\t\t\t\"pivot\": [1.9, 12, 0],\r\n\t\t\t\t\"pose\": [-10, 0, -2],\r\n\t\t\t\t\"cubes\": [\r\n\t\t\t\t\t{\"name\": \"Left Leg\", \"origin\": [-0.1, 0, -2], \"size\": [4, 12, 4], \"uv\": [16, 48]},\r\n\t\t\t\t\t{\"name\": \"Left Leg Layer\", \"visibility\": false, \"origin\": [-0.1, 0, -2], \"size\": [4, 12, 4], \"uv\": [0, 48], \"inflate\": 0.25, \"layer\": true}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}`\r\n};\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/skin_presets.js?\n}");

/***/ }),

/***/ "./src/util/uninstall_register.js":
/*!****************************************!*\
  !*** ./src/util/uninstall_register.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteRemovables: () => (/* binding */ deleteRemovables),\n/* harmony export */   registerRemovable: () => (/* binding */ registerRemovable)\n/* harmony export */ });\nconst removables = [];\r\n\r\nfunction registerRemovable(item) {\r\n\tremovables.push(item);\r\n}\r\nfunction deleteRemovables() {\r\n\tremovables.forEach(item => {\r\n\t\tif (typeof item.delete == 'function') item.delete();\r\n\t})\r\n\tremovables.splice(0, Infinity);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://skin-geometry-plugin/./src/util/uninstall_register.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/skin_packager.js");
/******/ 	
/******/ })()
;